class EFRabiExperiment(QubitPulseSequenceExperiment):
    def __init__(self, path='', prefix='EF_Rabi', config_file='..\\config.json', **kwargs):
        QubitPulseSequenceExperiment.__init__(self, path=path, prefix=prefix, config_file=config_file,
                                              PulseSequence=EFRabiSequence, pre_run=self.pre_run,
                                              post_run=self.post_run)

    def pre_run(self):
        self.drive.set_frequency(
            self.cfg['qubit']['frequency'] - self.cfg['pulse_info'][self.pulse_type]['iq_freq'])


    def post_run(self, expt_pts, expt_avg_data):
        print "Analyzing ef Rabi Data"
        self.pi_ef_length = self.cfg['pulse_info']['gauss']['pi_ef_length']
        self.half_pi_ef_length = self.cfg['pulse_info']['gauss']['half_pi_ef_length']
        fitdata = fitdecaysin(expt_pts[3:], expt_avg_data[3:])
        self.pi_ef_length = 0.5 / fitdata[1]
        self.half_pi_ef_length = 0.25 / (fitdata[1])
        print 'ef Rabi pi: %s ns' % (0.5 / fitdata[1])
        print 'ef Rabi pi/2: %s ns' % (0.25 / fitdata[1])
        print 'ef T1*: %s ns' % (fitdata[3])
        if (self.cfg['pulse_info']['save_to_file']):
                self.cfg['pulse_info']['gauss']['pi_ef_length'] = self.pi_ef_length
                self.cfg['pulse_info']['gauss']['half_pi_ef_length'] =  self.half_pi_ef_length